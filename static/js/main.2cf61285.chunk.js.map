{"version":3,"sources":["Components/App/RickAndMorty.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["fetchCharacters","a","fetch","res","json","RickAndMorty","useQuery","data","status","console","log","results","map","dataPoint","dataIndex","className","name","src","image","origin","queryClient","QueryClient","App","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAOMA,EAAe,uCAAG,4BAAAC,EAAA,sEACJC,MAAM,6CADF,cAChBC,EADgB,yBAEfA,EAAIC,QAFW,2CAAH,qDA6CNC,EAxCM,WACnB,MAAyBC,YAAS,gBAAiBN,GAA3CO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAGd,OADAC,QAAQC,IAAIH,GAEV,gCACE,gDAEY,UAAXC,GAAsB,sDACX,YAAXA,GAAwB,mDACb,YAAXA,GACC,mCACGD,EAAKI,QAAQC,KAAI,SAACC,EAAWC,GAAZ,OAChB,sBAAqBC,UAAU,OAA/B,UACE,wCAAWF,EAAUG,QACrB,qBAAKC,IAAKJ,EAAUK,QACpB,yCAAYL,EAAUM,OAAOH,QAAU,IACvC,yCAAYH,EAAUL,YAJdM,YCnBhBM,EAAc,IAAIC,IAaTC,EAXH,WACV,OACE,cAACC,EAAA,EAAD,CAAqBC,OAAQJ,EAA7B,SACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,SCAOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2cf61285.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, QueryClient } from \"react-query\";\n\n//https://rickandmortyapi.com/api\n\n// var url = 'https://rickandmortyapi.com/api/character';\n\nconst fetchCharacters = async () => {\n  const res = await fetch(\"https://rickandmortyapi.com/api/character\");\n  return res.json();\n};\n\nconst RickAndMorty = () => {\n  const { data, status } = useQuery(\"characterList\", fetchCharacters);\n\n  console.log(data);\n  return (\n    <div>\n      <h2>Rick And Morty</h2>\n\n      {status === \"error\" && <div>Error Fetching Data</div>}\n      {status === \"Loading\" && <div>Loading Data....</div>}\n      {status === \"success\" && (\n        <>\n          {data.results.map((dataPoint, dataIndex) => (\n            <div key={dataIndex} className=\"card\">\n              <h3>Name: {dataPoint.name}</h3>\n              <img src={dataPoint.image} />\n              <p>Origin: {dataPoint.origin.name}</p>{\" \"}\n              <p>Status: {dataPoint.status}</p>\n            </div>\n          ))}\n        </>\n      )}\n      {/* {status === 'success' && dataSet === \"https://rickandmortyapi.com/api/episode\" && (\n                  <>\n               {data.results.map((dataPoint, dataIndex)=>\n                <div key={dataIndex} className=\"card\">\n                    <h3>Name: {dataPoint.name}</h3>\n                   \n                     <p>Episode: {dataPoint.episode}</p> <p>Status: {dataPoint.status}</p> \n                     </div>\n              \n               )}\n        \n               </>\n              \n           )}  */}\n    </div>\n  );\n};\n\nexport default RickAndMorty;\n","import React, { useState } from \"react\";\nimport \"../Styling/App.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\nimport RickAndMorty from \"./RickAndMorty\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        <RickAndMorty />\n      </div>\n      {/* <ReactQueryDevtools initialIsOpen={false} /> */}\n    </QueryClientProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}